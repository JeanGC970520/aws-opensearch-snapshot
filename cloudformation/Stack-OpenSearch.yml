AWSTemplateFormatVersion: '2010-09-09'

Description: OpenSearchServiceDomain resource
Parameters:
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: 'Select the default VPC'

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: 'Select 2 or more subnets from the default VPC'

  DomainName:
    Type: String
    Default: 'my-opensearch'
    Description: 'OpenSearch domain name'

Resources:
  OpenSearchDomainSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for OpenSearch'
      VpcId: !Ref VPCId

  OpenSearchDomain:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName: !Ref DomainName
      EngineVersion: 'OpenSearch_2.3'
      ClusterConfig:
        InstanceType: 't3.small.search'
        InstanceCount: 1
      EBSOptions:
        EBSEnabled: true
        VolumeType: 'gp3'
        VolumeSize: 20
      VPCOptions:
        SecurityGroupIds:
          - !Ref OpenSearchDomainSecurityGroup
        SubnetIds: !Ref SubnetIds
      AdvancedSecurityOptions:
        Enabled: true
        AnonymousAuthEnabled: false
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName: !Join [ "", [ "{{resolve:secretsmanager:", Fn::ImportValue: !Sub "secret-manager-OPENSEARCH-MASTER-USER-arn", ':SecretString:Username}}' ] ]
          MasterUserPassword: !Join [ "", [ "{{resolve:secretsmanager:", Fn::ImportValue: !Sub "secret-manager-OPENSEARCH-MASTER-USER-arn", ':SecretString:Password}}' ] ]
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}/*'

  OpenSearchSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: OpenSearchDomain
    Properties:
      GroupId: !Ref OpenSearchDomainSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId: !Ref OpenSearchDomainSecurityGroup
      Description: 'Allow HTTPS from same security group (for Lambda access)'
  
  OpenSearchAssumeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: OpenSearchS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                  - "s3:GetBucketLocation"
                  - "s3:ListBucketMultipartUploads"
                  - "s3:ListBucketVersions"
                Resource: !Sub "arn:aws:s3:::dev-data-*"
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:DeleteObject"
                  - "s3:AbortMultipartUpload"
                  - "s3:ListMultipartUploadParts"
                Resource: !Sub "arn:aws:s3:::dev-data-*"

Outputs:
  OpenSearchEndpoint:
    Value: !Sub 'https://${OpenSearchDomain.DomainEndpoint}'
    Export:
      Name: !Sub 'OpenSearch-Endpoint'

  OpenSearchArn:
    Value: !GetAtt OpenSearchDomain.DomainArn
    Export:
      Name: !Sub 'OpenSearch-Arn'

  OpenSearchDomainSecurityGroupId:
    Value: !Ref OpenSearchDomainSecurityGroup
    Export:
      Name: !Sub 'OpenSearch-SecurityGroup'

  VPCId:
    Value: !Ref VPCId
    Export:
      Name: !Sub '${AWS::StackName}-VPC'